
*** src/main.rs:150:84: replace && with || in <impl PartialEq for Pencil>::eq

*** mutation diff:
--- src/main.rs
+++ replace && with || in <impl PartialEq for Pencil>::eq
@@ -142,17 +142,17 @@
 struct Pencil {
     start: Point,
     offsets: Vec<Point>,
 }
 
 impl PartialEq for Pencil
 {
     fn eq(&self, other: &Self) -> bool {
-        (self.start == other.start) && (self.offsets.len() == other.offsets.len()) &&
+        (self.start == other.start) && (self.offsets.len() == other.offsets.len()) || /* ~ changed by cargo-mutants ~ */
             self.offsets.iter().zip(other.offsets.iter()).fold(
                 true,
                 |result, (point_1, point_2)|
                     result && (*point_1 == *point_2)
             )
     }
 }
 


*** \\\\?\\C:\\Users\\stefa\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\cargo.exe build --tests --manifest-path C:\\Users\\stefa\\AppData\\Local\\Temp\\cargo-mutants-TSS-Proj-vtQfAN.tmp\\Cargo.toml
   Compiling TSS-Proj v0.1.0 (C:\Users\stefa\AppData\Local\Temp\cargo-mutants-TSS-Proj-vtQfAN.tmp)
    Finished dev [unoptimized + debuginfo] target(s) in 0.85s

*** result: Success

*** \\\\?\\C:\\Users\\stefa\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\cargo.exe test --manifest-path C:\\Users\\stefa\\AppData\\Local\\Temp\\cargo-mutants-TSS-Proj-vtQfAN.tmp\\Cargo.toml
    Finished test [unoptimized + debuginfo] target(s) in 0.04s
     Running unittests src\main.rs (target\debug\deps\TSS_Proj-f24ad46a4df4cb1a.exe)

running 1 test
test mutants::tests::tests::test_1 ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s


*** result: Success
