
*** src/main.rs:188:9: replace <impl Deserializer for Pencil>::deserialize -> Result<Self, String> with Ok(Default::default())

*** mutation diff:
--- src/main.rs
+++ replace <impl Deserializer for Pencil>::deserialize -> Result<Self, String> with Ok(Default::default())
@@ -180,69 +180,13 @@
         ));
 
         pencil
     }
 }
 
 impl Deserializer<Object> for Pencil {
     fn deserialize(document: &Object) -> Result<Self, String> where Self: Sized {
-        let mut pencil = Pencil {
-            start: Point { x: 0.0, y: 0.0 },
-            offsets: vec![],
-        };
-
-        if let Some(start) = document.get("start") {
-            if let JsonValue::Object(start) = start {
-                match Point::deserialize(start) {
-                    Ok(start) => { pencil.start = start; }
-                    Err(message) => { return Err(message); }
-                }
-            } else {
-                return Err("Field start needs to be an object in pencil object.".into());
-            }
-        } else {
-            return Err("Field start needs to be in pencil object.".into());
-        }
-
-        if let Some(offsets) = document.get("offsets") {
-            if let JsonValue::Array(offsets) = offsets {
-                let offsets = offsets.iter()
-                    .fold(Ok(vec![]),
-                    |result, offset| {
-                        match result {
-                            Ok(mut offsets) => {
-                                if let JsonValue::Object(object) = offset {
-                                    let offset = Point::deserialize(object);
-                                    match offset {
-                                        Ok(offset) => {
-                                            offsets.push(offset);
-                                            Ok(offsets)
-                                        }
-                                        Err(message) => Err(message)
-                                    }
-                                } else {
-                                    return Err("Field offset needs to only have objects in pencil object.".into());
-                                }
-                            }
-                            err => err
-                        }
-                    }
-                );
-
-                match offsets {
-                    Ok(offsets) => {
-                        pencil.offsets = offsets;
-                    }
-                    Err(message) => {
-                        return Err(message);
-                    }
-                }
-            } else {
-                return Err("Field offsets needs to be an array in pencil object.".into());
-            }
-        }
-
-        Ok(pencil)
+        Ok(Default::default()) /* ~ changed by cargo-mutants ~ */
     }
 }
 
 


*** \\\\?\\C:\\Users\\stefa\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\cargo.exe build --tests --manifest-path C:\\Users\\stefa\\AppData\\Local\\Temp\\cargo-mutants-TSS-Proj-vtQfAN.tmp\\Cargo.toml
   Compiling TSS-Proj v0.1.0 (C:\Users\stefa\AppData\Local\Temp\cargo-mutants-TSS-Proj-vtQfAN.tmp)
    Finished dev [unoptimized + debuginfo] target(s) in 0.57s

*** result: Success

*** \\\\?\\C:\\Users\\stefa\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\cargo.exe test --manifest-path C:\\Users\\stefa\\AppData\\Local\\Temp\\cargo-mutants-TSS-Proj-vtQfAN.tmp\\Cargo.toml
    Finished test [unoptimized + debuginfo] target(s) in 0.01s
     Running unittests src\main.rs (target\debug\deps\TSS_Proj-f24ad46a4df4cb1a.exe)

running 1 test
test mutants::tests::tests::test_1 ... FAILED

failures:

---- mutants::tests::tests::test_1 stdout ----
1
thread 'mutants::tests::tests::test_1' panicked at src\main.rs:58:9:
assertion `left == right` failed
  left: start: x: 10, y: 4.6
offsets: [x: 2.4, y: 3, x: 3.6, y: 1.4]
 right: start: x: 0, y: 0
offsets: []
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace


failures:
    mutants::tests::tests::test_1

test result: FAILED. 0 passed; 1 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

error: test failed, to rerun pass `--bin TSS-Proj`

*** result: Failure(101)
