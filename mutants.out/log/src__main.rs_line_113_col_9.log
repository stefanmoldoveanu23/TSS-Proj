
*** src/main.rs:113:9: replace <impl Deserializer for Point>::deserialize -> Result<Self, String> with Ok(Default::default())

*** mutation diff:
--- src/main.rs
+++ replace <impl Deserializer for Point>::deserialize -> Result<Self, String> with Ok(Default::default())
@@ -105,39 +105,17 @@
         point.insert("y", JsonValue::Number(self.y.into()));
 
         point
     }
 }
 
 impl Deserializer<Object> for Point {
     fn deserialize(document: &Object) -> Result<Self, String> {
-        let mut point = Point { x: 0.0, y: 0.0 };
-
-        if let Some(x) = document.get("x") {
-            if let JsonValue::Number(x) = x {
-                point.x = From::from(*x);
-            } else {
-                return Err("Field x needs to be a number in point object.".into());
-            }
-        } else {
-            return Err("Field x needs to be in point object.".into());
-        }
-
-        if let Some(y) = document.get("y") {
-            if let JsonValue::Number(y) = y {
-                point.y = From::from(*y);
-            } else {
-                return Err("Field y needs to be a number in point object.".into());
-            }
-        } else {
-            return Err("Field y needs to be in point object.".into());
-        }
-
-        Ok(point)
+        Ok(Default::default()) /* ~ changed by cargo-mutants ~ */
     }
 }
 
 #[derive(Default)]
 struct Pencil {
     start: Point,
     offsets: Vec<Point>,
 }


*** \\\\?\\C:\\Users\\stefa\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\cargo.exe build --tests --manifest-path C:\\Users\\stefa\\AppData\\Local\\Temp\\cargo-mutants-TSS-Proj-Jj7jFB.tmp\\Cargo.toml
   Compiling TSS-Proj v0.1.0 (C:\Users\stefa\AppData\Local\Temp\cargo-mutants-TSS-Proj-Jj7jFB.tmp)
    Finished dev [unoptimized + debuginfo] target(s) in 0.59s

*** result: Success

*** \\\\?\\C:\\Users\\stefa\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\cargo.exe test --manifest-path C:\\Users\\stefa\\AppData\\Local\\Temp\\cargo-mutants-TSS-Proj-Jj7jFB.tmp\\Cargo.toml
    Finished test [unoptimized + debuginfo] target(s) in 0.01s
     Running unittests src\main.rs (target\debug\deps\TSS_Proj-f24ad46a4df4cb1a.exe)

running 3 tests
test mutants::tests::tests::test_2 - should panic ... ok
test mutants::tests::tests::test_3 - should panic ... ok
test mutants::tests::tests::test_1 ... FAILED

failures:

---- mutants::tests::tests::test_1 stdout ----
thread 'mutants::tests::tests::test_1' panicked at src\main.rs:56:9:
assertion `left == right` failed
  left: start: x: 10, y: 4.6
offsets: [x: 2.4, y: 3, x: 3.6, y: 1.4]
 right: start: x: 0, y: 0
offsets: [x: 0, y: 0, x: 0, y: 0]
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace


failures:
    mutants::tests::tests::test_1

test result: FAILED. 2 passed; 1 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

error: test failed, to rerun pass `--bin TSS-Proj`

*** result: Failure(101)
